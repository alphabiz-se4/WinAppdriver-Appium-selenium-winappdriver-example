# This is a basic workflow to help you get started with Actions

name: winappdriver
env:
  name: staging_environment

concurrency: staging_environment
on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:
#
jobs:
  build:

    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        # os: [win10-self-hosted]
        os: [windows-latest]
        node-version: [14]
    steps:
      - name: Get short SHA üîë
        id: slug
        run: |
          echo "::set-output name=sha7::${GITHUB_SHA::7}"
          echo "::set-output name=date::$(git log -1 --date=format:'%Y%m%d' --format='%cd')"
        shell: bash

      - name: Checkout ${{ steps.slug.outputs.sha7 }} ‚¨áÔ∏è   
        uses: actions/checkout@v2

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v2
        with:
          node-version: ${{ matrix.node-version }}
          registry-url: "https://npm.pkg.github.com"
          scope: "@zeeis"
        env:
          NODE_AUTH_TOKEN: ${{ secrets.PAT }}

      - name: Get last commit date
        id: vars
        run: |
          echo "::set-output name=date::$(git log -1 --date=format:'%Y%m%d' --format='%cd')"
        shell: bash

      - name: Checkout vars-date ${{ steps.vars.outputs.date }} ‚¨áÔ∏è
        run: |
          echo "${{ steps.vars.outputs.date }}"

      - name: Install dependencies üë®üèª‚Äçüíª
        run: yarn install

      # - uses: GuillaumeFalourd/setup-windows10-sdk-action@v1
      #   with:
      #     sdk-version: 22000

      # - name: Install Calculator*
      #   run:  |
      #     dir
      #     Import-Module Appx
      #     Get-AppxPackage -AllUsers | Select Name, PackageFullName
      #     Get-AppxPackage -Allusers *windowscalculator*
      #     Get-WindowsDeveloperLicense
      #     Add-AppPackage -Path .\Microsoft.WindowsCalculator_2020.2103.8.0_neutral___8wekyb3d8bbwe.AppxBundle
      #   shell: powershell

      - name: Install winappdriver.msi
        run: | 
          Invoke-WebRequest "https://github.com/microsoft/WinAppDriver/releases/download/v1.2.1/WindowsApplicationDriver_1.2.1.msi" -OutFIle "C:\WindowsApplicationDriver_1.2.1.msi"
          Start-Process msiexec -ArgumentList "/quiet","/x","{087BBF93-D9E3-4D27-BDBE-9C702E0066FC}" -Verb runAs -Wait
          Start-Process msiexec -ArgumentList "/quiet","/i","C:\WindowsApplicationDriver_1.2.1.msi" -Verb runAs -Wait
          Start-Sleep -s 5
        shell: powershell

      # - name: Install AccessibilityInsights/msi
      #   run: |
      #     Invoke-WebRequest "https://github.com/microsoft/accessibility-insights-windows/releases/download/v1.1.1815.01/AccessibilityInsights.msi" -OutFIle "C:\AccessibilityInsights.msi"
      #     Start-Process msiexec -ArgumentList "/quiet","/i","C:\AccessibilityInsights.msi" -Verb runAs -Wait
      #     Start-Sleep -s 5

      - name: Install Alphabiz.7z
        run: |
          Invoke-WebRequest "https://github.com/alphabiz-se4/WinAppdriver-Appium-selenium-winappdriver-example/releases/download/alphabiz-v1.0/alphabiz.7z" -OutFIle "C:\alphabiz.7z"
          cd C:/
          7z x alphabiz.7z
        env:
          NODE_AUTH_TOKEN: ${{ secrets.PAT }}
          GITHUB_PAT: ${{ secrets.PAT }}
      # msiexec /i  "C:\WindowsApplicationDriver_1.2.1.msi" /q

      # - name: manu Run winappdriver
      #   run: | 
      #     cd "C:\Program Files (x86)\Windows Application Driver\"
      #     Start-Process -FilePath "C:\Program Files (x86)\Windows Application Driver\WinAppDriver.exe"
      #     Start-Sleep -s 5
      #   shell: powershell

      - name: Run appium
        run: |
          Start-Process PowerShell -ArgumentList "yarn appium --log ./test/output/release/appium.log"
          Start-Sleep -s 10
          
      - name: Run test release
        # run: yarn run jest
        uses: nick-invision/retry@v2
        with:
          timeout_minutes: 10
          max_attempts: 2
          retry_on: error
          command: yarn run jest
      
      - name: Upload Test Results üóÉ
        if: always()
        uses: actions/upload-artifact@v2
        with:
          name: "output"
          path: output/**